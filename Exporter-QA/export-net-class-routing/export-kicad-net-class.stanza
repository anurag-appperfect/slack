#use-added-syntax(jitx)
defpackage export-kicad-net-class : 
  import core
  import collections
  import jitx
  import jitx/commands

pcb-landpattern basic-landpattern : 
  pcb-pad square-pad : 
    shape = Rectangle(1.0, 1.0)
    type = SMD
    layer(SolderMask(Top)) = Rectangle(1.1, 1.1)
  pad p[1]: square-pad at loc(-0.75, 0.0)
  pad p[2]: square-pad at loc( 0.75, 0.0)
  layer(Courtyard(Top)) = Rectangle(3.0, 3.0)

pcb-symbol basic-symbol : 
  layer("foreground") = Rectangle(6.0, 2.0)
  layer("background") = Rectangle(6.0, 2.0)
  pin p[1] at Point(-3.0, 0.0) with : 
    direction = Left
    length = 1.0
    number-size = 0.762
    name-size = 0.762          
  pin p[2] at Point(3.0, 0.0) with : 
    direction = Right
    length = 1.0
    number-size = 0.762
    name-size = 0.762     
  layer("foreground") = Text(">REF", 0.762, C, loc(0.0, 1.5))  
  layer("foreground") = Text(">VALUE", 0.762, C, loc(0.0, -1.5))

pcb-component component :     
  port p: pin[[1, 2]]

  landpattern = basic-landpattern(
    p[1] => basic-landpattern.p[1]
    p[2] => basic-landpattern.p[2]
  )
  symbol = basic-symbol(
    p[1] => basic-symbol.p[1]
    p[2] => basic-symbol.p[2]
  )

pcb-module main-module :
  inst i: component[2]

  val gnd-net-class = NetClass(`GND, [`min-trace => 0.5 `min-space => 0.1])
  val vdd-net-class = NetClass(`VDD, [`min-trace => 0.2 `min-space => 0.2])

  net gnd (i[0].p[1], i[1].p[1])
  net vdd (i[0].p[2], i[1].p[2])
  property(gnd.net-class) = gnd-net-class
  property(vdd.net-class) = vdd-net-class

  place(i[0]) at loc(-2.5, -2.5) on Top
  place(i[1]) at loc(2.5, 2.5) on Top

pcb-board basic-board : 
  pcb-stackup basic-stackup : 
    pcb-material copper :
      type = Conductor
    pcb-material core :
      type = Dielectric
      dielectric-coefficient = 4.26
    pcb-material prepreg :
      type = Dielectric
      dielectric-coefficient = 4.26
    pcb-material soldermask :
      type = Dielectric
      dielectric-coefficient = 3.9
      
    layer(2.03e-2, soldermask)
    for i in 2 to 4 do :
      layer(1.498e-1, prepreg) when i > 0
      layer(5.08e-2,  copper)  
    layer(2.03e-2, soldermask)   

  stackup = basic-stackup
  boundary = Rectangle(10.0, 10.0)
  signal-boundary = Rectangle(10.0, 10.0)

pcb-rules basic-rules : 
  min-copper-width = 0.13
  min-copper-copper-space = 0.2 
  min-copper-hole-space = 0.2032
  min-copper-edge-space = 0.381
  min-annular-ring = 0.152
  min-drill-diameter = 0.254
  min-silkscreen-width = 0.0762
  min-pitch-leaded = 0.35
  min-pitch-bga = 0.35
  max-board-width = 457.2
  max-board-height = 609.6
  solder-mask-registration = 0.15
  min-silk-solder-mask-space = 0.15
  min-silkscreen-text-height = 0.762
  min-th-pad-expand-outer = 0.15
  min-soldermask-opening = 0.152
  min-soldermask-bridge = 0.102
  min-hole-to-hole = 0.254
  min-pth-pin-solder-clearance = 3.0

set-main-module(main-module)
set-board(basic-board)
set-rules(basic-rules)

set-export-backend(`kicad)
export-cad()