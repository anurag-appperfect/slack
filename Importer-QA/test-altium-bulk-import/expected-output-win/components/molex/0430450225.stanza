#use-added-syntax(jitx)
defpackage output/molex/0430450225 :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults
  import ocdb/land-patterns
  import ocdb/generic-components
  import ocdb/symbols

pcb-landpattern _0430450225-lp :
  pad MOUNT1 : oval-pth-pad(1.205, 2.918, 2.918) at loc(2.15, -0.47) on Top
  pad MOUNT2 : oval-pth-pad(1.205, 2.918, 2.918) at loc(-2.15, -0.47, 180.0) on Top
  pad p[0][1] : oval-pth-pad(0.51, 1.02, 1.02) at loc(3.0, 1.97) on Top
  pad p[0][2] : oval-pth-pad(0.51, 1.02, 1.02) at loc(-3.0, 1.97) on Top
  pad p[1] : oval-pth-pad(0.51, 1.52801, 1.52801) at loc(0.0, -1.97) on Top
  pad p[2] : oval-pth-pad(0.51, 1.52801, 1.52801) at loc(0.0, 1.03) on Top
  
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(-3.985, 4.699), Point(4.064, 4.699)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(4.064, -4.3068), Point(4.064, 4.699)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(-3.985, -4.3068), Point(-3.985, 4.699)])
  ref-label()

pcb-symbol _0430450225-symbol :
  pin MNT at Point(10.16, -10.16) with :
    direction = Down
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p[1] at Point(5.08, 0.0) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p[2] at Point(5.08, -2.54) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  layer("foreground") = Rectangle(10.16, 12.7, loc(10.16, -3.81))
  layer("foreground") = Text(">VALUE", 0.762, SW, loc(5.08, 2.84))
  layer("foreground") = Text(">REF", 0.762, SW, loc(5.08, 3.902))

public pcb-component component :
  name = "0430450225"
  description = "0430450225"
  manufacturer = "Molex"
  mpn = "0430450225"
  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir]
    [MNT | MOUNT1, MOUNT2 | Down]
    [p[1] | p[1] | Left]
    [p[2] | p[2] | Left]
  
  assign-landpattern(_0430450225-lp)
  val sym = _0430450225-symbol
  symbol = sym(self.MNT => sym.MNT, self.p[1] => sym.p[1], self.p[2] => sym.p[2])

