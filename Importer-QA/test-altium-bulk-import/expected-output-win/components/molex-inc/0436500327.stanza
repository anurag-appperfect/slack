#use-added-syntax(jitx)
defpackage output/molex-inc/0436500327 :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults
  import ocdb/land-patterns
  import ocdb/generic-components
  import ocdb/symbols

pcb-landpattern Molex1x3MicrofitST :
  pad p[0][1] : oval-pth-pad(0.635, 0.0, 0.0) at loc(2.36, -0.84) on Top
  pad p[0][2] : oval-pth-pad(0.635, 0.0, 0.0) at loc(2.36, 11.16) on Top
  pad p[1] : oval-pth-pad(0.5334, 1.778, 1.778) at loc(4.32, 2.16) on Top
  pad p[2] : oval-pth-pad(0.5334, 1.778, 1.778) at loc(4.32, 5.16) on Top
  pad p[3] : oval-pth-pad(0.5334, 1.778, 1.778) at loc(4.32, 8.16) on Top
  
  layer(Silkscreen("F-SilkS", Top)) = Line(0.2, [Point(1.5, -1.1684), Point(6.0, -1.16841)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.2, [Point(6.0, -1.16841), Point(6.0, 11.5062)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.2, [Point(1.5, 11.5062), Point(6.0, 11.5062)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.2, [Point(1.5, -1.1684), Point(1.5, 11.5062)])
  ref-label()

pcb-symbol CMP-001-0438-01-symbol :
  pin p[1] at Point(0.0, -2.54) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p[2] at Point(0.0, -7.62) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p[3] at Point(0.0, -12.7) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  layer("foreground") = Rectangle(5.08, 15.24, loc(2.54, -7.62))
  layer("foreground") = Text(">VALUE", 0.762, SW, loc(0.0, 0.3))
  layer("foreground") = Text(">REF", 0.762, SW, loc(0.0, 1.362))

public pcb-component component :
  name = "CMP-001-0438-01"
  description = "MICROFIT 3.0 HDR VERT CPI 3CKT"
  manufacturer = "Molex Inc"
  mpn = "0436500327"
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir]
    [p[1] | 1 | Left]
    [p[2] | 2 | Left]
    [p[3] | 3 | Left]
  
  assign-landpattern(Molex1x3MicrofitST)
  val sym = CMP-001-0438-01-symbol
  symbol = sym(self.p[1] => sym.p[1], self.p[2] => sym.p[2], self.p[3] => sym.p[3])

